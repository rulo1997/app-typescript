# Versión del formato de Docker Compose
version: '3.8'

# Definición de los servicios (contenedores)
services:
  # Nombre de nuestro servicio de base de datos
  db:
    # Imagen de Docker que usaremos. Es buena práctica fijar una versión.
    image: mysql:8.0
    
    # Nombre que le daremos al contenedor para identificarlo fácilmente
    container_name: ecommerce-mysql-db
    
    # Política de reinicio. 'always' hace que se inicie con Docker.
    restart: always
    
    # Variables de entorno para configurar MySQL
    # ¡Estas deben coincidir con tu archivo .env!
    environment:
      MYSQL_ROOT_PASSWORD: root_password_super_secreta # Cambia esto por una contraseña segura
      MYSQL_DATABASE: ecommerce_db
      MYSQL_USER: ecommerce_user
      MYSQL_PASSWORD: ecommerce_password
      
    # Mapeo de puertos. Expone el puerto 3306 del contenedor al puerto 3306 de tu máquina.
    ports:
      - "3306:3306"
      
    # Volúmenes para persistir los datos.
    # Esto evita que pierdas la información de la base de datos si el contenedor se detiene o elimina.
    volumes:
      - mysql-data:/var/lib/mysql

  cache:
    image: redis:6.2-alpine # Usamos una imagen ligera de Redis
    container_name: ecommerce-redis-cache
    restart: always
    ports:
      - "6379:6379" # Expone el puerto por defecto de Redis a tu máquina
    volumes:
      - redis-data:/data # Persiste los datos de Redis

# Docker creará y gestionará este volumen por nosotros.
volumes:
  mysql-data:
  redis-data: